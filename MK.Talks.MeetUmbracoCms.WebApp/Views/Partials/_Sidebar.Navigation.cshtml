@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.IPageBase>
@using ContentModels = MK.Talks.MeetUmbracoCms.WebApp.Models.PublishedContent;
@using Umbraco.Cms.Core.Security

@inject IMemberManager MemberManager

<ul class="menu-inner py-1">
    <!-- Dashboard -->
    @{
        var homepage = Umbraco.ContentAtRoot().First();
        var pages = homepage.Children;
        var reportLists = pages.Where(p => p is ContentModels.ReportList);
        var pageContentModel = Model as PublishedContentModel;
        var homepageCssClasses = Model.Key == homepage.Key ? "active" : "";  
    }

    <li class="menu-item @homepageCssClasses">
        <a href="@homepage.Url()" class="menu-link">
            <i class="menu-icon tf-icons bx bx-home-circle"></i>
            <div data-i18n="Analytics">@homepage.Name</div>
        </a>
    </li>
    
    @if (reportLists.Any())
    {
        var open = Model is ContentModels.ReportList or ContentModels.ReportPage ? "active open" : "";
        <li class="menu-item @open">
            <a href="javascript:void(0);" class="menu-link menu-toggle">
                <i class="menu-icon tf-icons bx bxs-report"></i>
                <div data-i18n="Layouts">My Reports</div>
            </a>

            <ul class="menu-sub">
                @foreach (var page in pages.Where(p => p is ContentModels.ReportList))
                {
                    var active = Model.Key == page.Key ? "active" : Model is ContentModels.ReportPage && page.Key == pageContentModel.Parent.Key ? "active" : "";
                    var url = page.Url();
                    var isMemberAuthorized = await MemberManager.MemberHasAccessAsync(page.Path);
                    var name = page.Name;

                    @if (isMemberAuthorized)
                    {
                        <li class="menu-item @active">
                            <a href="@url" class="menu-link">
                                <div data-i18n="@name">@name</div>
                            </a>
                        </li>
                    }
                }
            </ul>
        </li>
    }

    @if (MemberManager.IsLoggedIn())
    {
        <li class="menu-item">
            <a href="@Url.SurfaceAction("Logout","AccountSurface")" class="menu-link">
                <i class="menu-icon tf-icons bx bx-log-out-circle"></i>
                <div data-i18n="Analytics">Logout</div>
            </a>
        </li>
    }
</ul>